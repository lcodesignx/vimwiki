== Understanding RHEL System Roles ==

    *Understanding RHEL System Roles*
    
    * RHEL system roles are provided to configure standard RHEL operations
    * RHEL system roles have been provided since RHEL 7.4, and can be used to configure 
      RHEL 6.10 and later
    * Install the rhel-system-roles package to use them
    * RHEL system roles are derived from the Ansible Linux System Roles project, 
      which is available through Ansible Galaxy

    *Current RHEL System Roles*
    
    * Currently, the following RHEL system roles are provided: 
        * `rhel-system-roles.kdump` configures the kdump crash recovery service
        * `rhel-system-roles.network` configures network interfaces
        * `rhel-system-roles.selinux` manages all aspects of SELinux
        * `rhel-system-roles.timesync` is used to set up Netowrk Time Protocol or 
          Precision Time Protocol
        * `rhel-system-roles.postfix` is used to configure a host as a Postfix MTA
        * `rhel-system-roles.firewall` configures a firewall
        * `rhel-system-roles.tuned` configures the tuned service
    * Additional RHEL system roles are likely to be introduced

== Installing RHEL System Roles ==

    *Installing RHEL System Roles*
    
    * Use `yum install rhel-system-roles` to install them
    * The roles are installed to the /usr/share/ansible/roles directory, notice that 
      the upstream linux-system-roles name is provided as a symbolic link to provide 
      maximum compatibility
    * Documentation of Ansible system roles is available in /usr/share/doc/rhel-system-roles-<version>
    * Look for example YAML files in the role directories

== Using RHEL SELinux System Role ==

    *Using rhel-system-roles.selinux*
    
    * The RHEL system roles for SELinux can do several things:
        * Set enforcing or permissive mode
        * Set SELinux file contexts
        * Run `restorecon`
        * Set Booleans
        * Set SELinux User Mappings

    *Rebooting After Making Changes*
    
    * In some cases, to apply SELinux changes (such as a switch between enabled and 
      disabled mode), a reboot is required
    * The SELinux role doesn't reboot hosts itself because it should be up to the 
      administrator to do that
    * The role will set the `selinux_reboot_required` variable to `true`, and fail 
      if a reboot is required
    * This is used in a block / rescue structure, where the play is failing if the 
      variable is not set to true
    * If the variable is set to true, the host is rebooted and the role is started again
    * See sample code in example-selinux-playbook in the roles documentation

    *Setting SELinux Related Variables*
    
    * To configure SELinux from the role, set at least the following variables:
        * `selinux_state`
        * `selinux_booleans`
        * `selinux_fcontexts`
        * `selinux_restore_dirs`
        * `selinux_ports`
    * See the example playbook for examples

== Using RHEL TimeSync System Role ==

    *Using rhel-system-roles.timesync*
    
    * rhel-system-roles.timesync can be used to manage time synchronization
    * As the timesync service is different between RHEL 6 and RHEL 7/8, it makes 
      sense managing this functionality using a rhel-system-role
    * The role itself is configured to work with different variables, of which 
      `timesync_ntp_servers` is the most important one
    * Items in this variable are made up of different attrubutes, of which two are 
      common:
        * `hostname` shows the hostname of the time server
        * `iburst` specifies that fast iburst synchronization should be used
    * The `timezone` variable is also important, and sets the current timezone 
      to be used
    * A default playbook is available in /usr/share/doc/rhel-system-roles/timesync

== Lab: Using RHEL System Roles ==

    * Use a RHEL System Role to set up network cards in managed machines. You can 
      use a simple configuration where the interface is set to DHCP
