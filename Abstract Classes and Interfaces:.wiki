*The following points about abstract classes are worth noting:*

    * An abstract method cannot be contrained in a nonabstract class. If a subclass of an 
      abstract superclass does not impolement all hte abstract methods, the subclass must 
      be defined as abstract. In other words, in a nonabstract subclass extended from an 
      abstract class, all the abstract methods must be implemented. Also note that abstract 
      methods are nonstatic.
      
    * You cannot create an instance from an abstrtact class using the `new` operator, but an 
      abstract class can be used as a data type. Therfore, the following statement, which 
      creates an array whose elements are of the `GeometricObject` type, is correct. 
      
        `GeometricObject[] objects = new GeometricObject[10];`
        
      You can then create an instance of `GeometricObject` and assign its reference to 
      the array like this:
      
        `objects[0] = new Circle();`
